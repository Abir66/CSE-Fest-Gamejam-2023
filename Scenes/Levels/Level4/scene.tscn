[gd_scene load_steps=9 format=3 uid="uid://row58uftcxen"]

[ext_resource type="Script" path="res://Scenes/Levels/Level4/scene.gd" id="1_ofghk"]
[ext_resource type="Texture2D" uid="uid://df2pwoo73wdek" path="res://Assets/Pirate Island/Palm Tree Island/Sprites/Terrain/Terrain (32x32).png" id="2_0fwii"]
[ext_resource type="PackedScene" uid="uid://dbhh1ux71x4xa" path="res://Scenes/Player/player.tscn" id="3_nc3y0"]
[ext_resource type="PackedScene" uid="uid://xk8uoqtu6s68" path="res://Scenes/Utils/Key/key.tscn" id="4_ah7qu"]
[ext_resource type="PackedScene" uid="uid://ckqoi6bpghkwl" path="res://Scenes/boss/reaper.tscn" id="5_qx8tn"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_fcoyj"]
resource_name = "BaseTileset"
texture = ExtResource("2_0fwii")
texture_region_size = Vector2i(32, 32)
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
10:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
12:0/0 = 0
12:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:0/0/physics_layer_0/angular_velocity = 0.0
12:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
13:0/0 = 0
13:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:0/0/physics_layer_0/angular_velocity = 0.0
13:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
15:0/0 = 0
15:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:0/0/physics_layer_0/angular_velocity = 0.0
15:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
9:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
10:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
12:1/0 = 0
12:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:1/0/physics_layer_0/angular_velocity = 0.0
12:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
13:1/0 = 0
13:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:1/0/physics_layer_0/angular_velocity = 0.0
13:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
15:1/0 = 0
15:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:1/0/physics_layer_0/angular_velocity = 0.0
15:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
16:1/0 = 0
16:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:1/0/physics_layer_0/angular_velocity = 0.0
16:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -5.5625, 16, -10.0625, 14.125, -12.9375, 11.5, -14.9375, 7.125, -16, 2.125)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, -16, -16, -16, 5.25, -13.8125, 9.5, -11.8125, 12.5, -9.1875, 14.5, -6.0625, 16, 5.5625, 16, 10.0625, 14.125, 13.1875, 12.125, 14.9375, 8, 16, 2.125)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
12:3/0 = 0
12:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:3/0/physics_layer_0/angular_velocity = 0.0
12:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
13:3/0 = 0
13:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:3/0/physics_layer_0/angular_velocity = 0.0
13:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
15:3/0 = 0
15:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:3/0/physics_layer_0/angular_velocity = 0.0
15:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
16:3/0 = 0
16:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:3/0/physics_layer_0/angular_velocity = 0.0
16:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -5.5625, 16, -10.0625, 14.125, -12.9375, 11.5, -14.9375, 7.125, -16, 2.125)
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, -16, -16, -16, 16, 5.5625, 16, 10.0625, 14.125, 12.9375, 11.5, 14.9375, 7.125, 16, 2.125)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, -16, -16, -16, 5.25, -13.8125, 9.5, -11.8125, 12.5, -9.1875, 14.5, -6.0625, 16, 5.5625, 16, 10.0625, 14.125, 13.1875, 12.125, 14.9375, 8, 16, 2.125)
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
12:4/0 = 0
12:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:4/0/physics_layer_0/angular_velocity = 0.0
12:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
13:4/0 = 0
13:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:4/0/physics_layer_0/angular_velocity = 0.0
13:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
15:4/0 = 0
15:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:4/0/physics_layer_0/angular_velocity = 0.0
15:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -5.5625, 16, -10.0625, 14.125, -12.9375, 11.5, -14.9375, 7.125, -16, 2.125)
16:4/0 = 0
16:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:4/0/physics_layer_0/angular_velocity = 0.0
16:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, -16, -16, -16, 16, 5.5625, 16, 10.0625, 14.125, 12.9375, 11.5, 14.9375, 7.125, 16, 2.125)

[sub_resource type="TileSet" id="TileSet_mq71p"]
tile_size = Vector2i(32, 32)
physics_layer_0/collision_layer = 7
physics_layer_0/collision_mask = 7
sources/0 = SubResource("TileSetAtlasSource_fcoyj")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_72m5e"]
size = Vector2(150, 117)

[node name="Level" type="Node2D"]
script = ExtResource("1_ofghk")
enemies_to_spawn = 4

[node name="TileMap" type="TileMap" parent="."]
modulate = Color(0.807843, 0.807843, 0.807843, 1)
position = Vector2(-380, 190)
tile_set = SubResource("TileSet_mq71p")
format = 2
layer_0/tile_data = PackedInt32Array(1703955, 65536, 0, 1703956, 65536, 0, 1703957, 65536, 0, 1703958, 65536, 0, 1703959, 65536, 0, 1703960, 65536, 0, 1703961, 65536, 0, 1703962, 65536, 0, 1703963, 65536, 0, 1703964, 65536, 0, 1703965, 65536, 0, 1703966, 65536, 0, 1703967, 65536, 0, 1703968, 65536, 0, 1703969, 65536, 0, 1703970, 65536, 0, 1703971, 65536, 0, 1703972, 65536, 0, 1703973, 65536, 0, 1703974, 65536, 0, 1703975, 65536, 0, 1703976, 65536, 0, 1703977, 65536, 0, 1703978, 65536, 0, 1703979, 65536, 0, 1703980, 65536, 0, 1703981, 65536, 0, 1703982, 65536, 0, 1703983, 65536, 0, 1703984, 65536, 0, 1703985, 65536, 0, 1703986, 65536, 0, 1703954, 65536, 0, 1703953, 65536, 0, 1703952, 65536, 0, 1703951, 65536, 0, 1703950, 65536, 0, 1703949, 65536, 0, 1703948, 65536, 0, 1703987, 65536, 0, 1703988, 65536, 0, 1703989, 65536, 0, 1703990, 65536, 0, 1703991, 65536, 0, 1703992, 65536, 0, 1703993, 65536, 0, 1703994, 65536, 0, 1703995, 65536, 0, 1703996, 65536, 0, 1703997, 65536, 0, 1703998, 65536, 0, 1703999, 65536, 0, 1769484, 65536, 1, 1769485, 65536, 1, 1769486, 65536, 1, 1769487, 65536, 1, 1769488, 65536, 1, 1769489, 65536, 1, 1769490, 65536, 1, 1769491, 65536, 1, 1769492, 65536, 1, 1769493, 65536, 1, 1769494, 65536, 1, 1769495, 65536, 1, 1769496, 65536, 1, 1769497, 65536, 1, 1769498, 65536, 1, 1835035, 65536, 1, 1835036, 65536, 1, 1835037, 65536, 1, 1835038, 65536, 1, 1835039, 65536, 1, 1835040, 65536, 1, 1835041, 65536, 1, 1835042, 65536, 1, 1835043, 65536, 1, 1835044, 65536, 1, 1835045, 65536, 1, 1835046, 65536, 1, 1835020, 65536, 1, 1900556, 65536, 1, 1966092, 65536, 1, 1835021, 65536, 1, 1900557, 65536, 1, 1966093, 65536, 1, 1835022, 65536, 1, 1900558, 65536, 1, 1966094, 65536, 1, 1835023, 65536, 1, 1900559, 65536, 1, 1966095, 65536, 1, 1835024, 65536, 1, 1900560, 65536, 1, 1966096, 65536, 1, 1835025, 65536, 1, 1900561, 65536, 1, 1966097, 65536, 1, 1835026, 65536, 1, 1900562, 65536, 1, 1966098, 65536, 1, 1835027, 65536, 1, 1900563, 65536, 1, 1966099, 65536, 1, 1835028, 65536, 1, 1900564, 65536, 1, 1966100, 65536, 1, 1835029, 65536, 1, 1900565, 65536, 1, 1966101, 65536, 1, 1835030, 65536, 1, 1900566, 65536, 1, 1966102, 65536, 1, 1835031, 65536, 1, 1900567, 65536, 1, 1966103, 65536, 1, 1835032, 65536, 1, 1900568, 65536, 1, 1966104, 65536, 1, 1835033, 65536, 1, 1900569, 65536, 1, 1966105, 65536, 1, 1835034, 65536, 1, 1900570, 65536, 1, 1966106, 65536, 1, 1769499, 65536, 1, 1900571, 65536, 1, 1966107, 65536, 1, 1769500, 65536, 1, 1900572, 65536, 1, 1966108, 65536, 1, 1769501, 65536, 1, 1900573, 65536, 1, 1966109, 65536, 1, 1769502, 65536, 1, 1900574, 65536, 1, 1966110, 65536, 1, 1769503, 65536, 1, 1900575, 65536, 1, 1966111, 65536, 1, 1769504, 65536, 1, 1900576, 65536, 1, 1966112, 65536, 1, 1769505, 65536, 1, 1900577, 65536, 1, 1966113, 65536, 1, 1769506, 65536, 1, 1900578, 65536, 1, 1966114, 65536, 1, 1769507, 65536, 1, 1900579, 65536, 1, 1966115, 65536, 1, 1769508, 65536, 1, 1900580, 65536, 1, 1966116, 65536, 1, 1769509, 65536, 1, 1900581, 65536, 1, 1966117, 65536, 1, 1769510, 65536, 1, 1900582, 65536, 1, 1966118, 65536, 1, 1769511, 65536, 1, 1835047, 65536, 1, 1900583, 65536, 1, 1966119, 65536, 1, 1769512, 65536, 1, 1835048, 65536, 1, 1900584, 65536, 1, 1966120, 65536, 1, 1769513, 65536, 1, 1835049, 65536, 1, 1900585, 65536, 1, 1966121, 65536, 1, 1769514, 65536, 1, 1835050, 65536, 1, 1900586, 65536, 1, 1966122, 65536, 1, 1769515, 65536, 1, 1835051, 65536, 1, 1900587, 65536, 1, 1966123, 65536, 1, 1769516, 65536, 1, 1835052, 65536, 1, 1900588, 65536, 1, 1966124, 65536, 1, 1769517, 65536, 1, 1835053, 65536, 1, 1900589, 65536, 1, 1966125, 65536, 1, 1769518, 65536, 1, 1835054, 65536, 1, 1900590, 65536, 1, 1966126, 65536, 1, 1769519, 65536, 1, 1835055, 65536, 1, 1900591, 65536, 1, 1966127, 65536, 1, 1769520, 65536, 1, 1835056, 65536, 1, 1900592, 65536, 1, 1966128, 65536, 1, 1769521, 65536, 1, 1835057, 65536, 1, 1900593, 65536, 1, 1966129, 65536, 1, 1769522, 65536, 1, 1835058, 65536, 1, 1900594, 65536, 1, 1966130, 65536, 1, 1769523, 65536, 1, 1835059, 65536, 1, 1900595, 65536, 1, 1966131, 65536, 1, 1769524, 65536, 1, 1835060, 65536, 1, 1900596, 65536, 1, 1966132, 65536, 1, 1769525, 65536, 1, 1835061, 65536, 1, 1900597, 65536, 1, 1966133, 65536, 1, 1769526, 65536, 1, 1835062, 65536, 1, 1900598, 65536, 1, 1966134, 65536, 1, 1769527, 65536, 1, 1835063, 65536, 1, 1900599, 65536, 1, 1966135, 65536, 1, 1769528, 65536, 1, 1835064, 65536, 1, 1900600, 65536, 1, 1966136, 65536, 1, 1769529, 65536, 1, 1835065, 65536, 1, 1900601, 65536, 1, 1966137, 65536, 1, 1769530, 65536, 1, 1835066, 65536, 1, 1900602, 65536, 1, 1966138, 65536, 1, 1769531, 65536, 1, 1835067, 65536, 1, 1900603, 65536, 1, 1966139, 65536, 1, 1769532, 65536, 1, 1835068, 65536, 1, 1900604, 65536, 1, 1966140, 65536, 1, 1769533, 65536, 1, 1835069, 65536, 1, 1900605, 65536, 1, 1966141, 65536, 1, 1769534, 65536, 1, 1835070, 65536, 1, 1900606, 65536, 1, 1966142, 65536, 1, 1769535, 65536, 1, 1835071, 65536, 1, 1900607, 65536, 1, 1966143, 65536, 1, 1703938, 65536, 0, 1703939, 65536, 0, 1703940, 65536, 0, 1703941, 65536, 0, 1703945, 65536, 0, 1703947, 65536, 0, 1703946, 65536, 0, 1703944, 65536, 0, 1703943, 65536, 0, 1703942, 65536, 0, 1704000, 65536, 0, 1704001, 65536, 0, 1704002, 65536, 0, 1704003, 65536, 0, 1704004, 65536, 0, 1704005, 65536, 0, 1704006, 65536, 0, 1704007, 65536, 0, 1704008, 65536, 0, 1704009, 65536, 0, 1704010, 65536, 0, 1704011, 65536, 0, 1704012, 65536, 0, 1704013, 65536, 0, 1704014, 65536, 0, 1704015, 65536, 0, 1704016, 65536, 0, 1704017, 65536, 0, 1704018, 65536, 0, 1704019, 65536, 0, 1704020, 65536, 0, 1704021, 65536, 0, 1704022, 65536, 0, 1704023, 65536, 0, 1704024, 65536, 0, 1704025, 65536, 0, 1704026, 65536, 0, 1704027, 65536, 0, 1704028, 65536, 0, 1704029, 65536, 0, 1704030, 65536, 0, 1704031, 65536, 0, 1704032, 65536, 0, 1704033, 65536, 0, 1704034, 65536, 0, 1704035, 65536, 0, 1704036, 65536, 0, 1704037, 65536, 0, 1704038, 65536, 0, 1704039, 65536, 0, 1704040, 65536, 0, 1704041, 65536, 0, 1704042, 65536, 0, 1704043, 65536, 0, 1704044, 65536, 0, 1704045, 65536, 0, 1704046, 65536, 0, 1704047, 65536, 0, 1704048, 65536, 0, 1704049, 65536, 0, 1704050, 65536, 0, 1704051, 65536, 0, 1704052, 65536, 0, 1704053, 65536, 0, 1704054, 65536, 0, 1704055, 65536, 0, 1704056, 65536, 0, 196722, 0, 1, 262258, 0, 1, 327794, 0, 1, 393330, 0, 1, 458866, 0, 1, 524402, 0, 1, 589938, 0, 1, 655474, 0, 1, 721010, 0, 1, 786546, 0, 1, 852082, 0, 1, 917618, 0, 1, 983154, 0, 1, 1048690, 0, 1, 1114226, 0, 1, 1179762, 0, 1, 1245298, 0, 1, 1310834, 0, 1, 1376370, 0, 1, 1441906, 0, 1, 1507442, 0, 1, 1572978, 0, 1, 1638514, 0, 1, 196723, 65536, 1, 196724, 65536, 1, 196725, 65536, 1, 196726, 65536, 1, 196727, 65536, 1, 196728, 65536, 1, 196729, 65536, 1, 196730, 65536, 1, 196731, 65536, 1, 196732, 65536, 1, 196733, 65536, 1, 196734, 65536, 1, 196735, 65536, 1, 262271, 65536, 1, 327807, 65536, 1, 393343, 65536, 1, 458879, 65536, 1, 524416, 65536, 1, 589952, 65536, 1, 655488, 65536, 1, 721024, 65536, 1, 786560, 65536, 1, 852096, 65536, 1, 917632, 65536, 1, 983168, 65536, 1, 1048704, 65536, 1, 1114240, 65536, 1, 1179776, 65536, 1, 1245312, 65536, 1, 1245311, 65536, 1, 1310847, 65536, 1, 1376383, 65536, 1, 1441919, 65536, 1, 1507455, 65536, 1, 1572991, 65536, 1, 1638515, 65536, 1, 1638516, 65536, 1, 1638517, 65536, 1, 1638518, 65536, 1, 1638519, 65536, 1, 1638520, 65536, 1, 1638521, 65536, 1, 1638522, 65536, 1, 1638523, 65536, 1, 1638524, 65536, 1, 1638525, 65536, 1, 1638526, 65536, 1, 1638527, 65536, 1, 524415, 65536, 1, 589951, 65536, 1, 655487, 65536, 1, 721023, 65536, 1, 786559, 65536, 1, 852095, 65536, 1, 917631, 65536, 1, 983167, 65536, 1, 1048703, 65536, 1, 1114239, 65536, 1, 1179775, 65536, 1, 196736, 65536, 1, 262272, 65536, 1, 327808, 65536, 1, 393344, 65536, 1, 458880, 65536, 1, 1704057, 65536, 0, 1704058, 65536, 0, 1704059, 65536, 0, 1704060, 65536, 0, 1704061, 65536, 0, 1704062, 65536, 0, 1704063, 65536, 0, 1704064, 65536, 0, 917626, 65536, 1, 852090, 65536, 1, 786554, 65536, 1, 721018, 65536, 1, 655482, 65536, 1, 589946, 65536, 1, 524410, 65536, 1, 458874, 65536, 1, 393338, 65536, 1, 327802, 65536, 1, 262266, 65536, 1, 262265, 65536, 1, 262264, 65536, 1, 262263, 65536, 1, 262262, 65536, 1, 262261, 65536, 1, 262260, 65536, 1, 262259, 65536, 1, 327795, 65536, 1, 393331, 65536, 1, 458867, 65536, 1, 524403, 65536, 1, 589939, 65536, 1, 655475, 65536, 1, 721011, 65536, 1, 786547, 65536, 1, 852083, 65536, 1, 917619, 65536, 1, 983155, 65536, 1, 1048691, 65536, 1, 1114227, 65536, 1, 1179763, 65536, 1, 1245299, 65536, 1, 1310835, 65536, 1, 1376371, 65536, 1, 1441907, 65536, 1, 1507443, 65536, 1, 1572979, 65536, 1, 1572980, 65536, 1, 1507444, 65536, 1, 1441908, 65536, 1, 1376372, 65536, 1, 1310836, 65536, 1, 1245300, 65536, 1, 1179764, 65536, 1, 1114228, 65536, 1, 1048692, 65536, 1, 983156, 65536, 1, 917620, 65536, 1, 852084, 65536, 1, 786548, 65536, 1, 721012, 65536, 1, 655476, 65536, 1, 589940, 65536, 1, 524404, 65536, 1, 458868, 65536, 1, 393332, 65536, 1, 327796, 65536, 1, 327797, 65536, 1, 393333, 65536, 1, 458869, 65536, 1, 524405, 65536, 1, 589941, 65536, 1, 655477, 65536, 1, 721013, 65536, 1, 786549, 65536, 1, 852085, 65536, 1, 917621, 65536, 1, 983157, 65536, 1, 1048693, 65536, 1, 1114229, 65536, 1, 1179765, 65536, 1, 1245301, 65536, 1, 1310837, 65536, 1, 1376373, 65536, 1, 1441909, 65536, 1, 1507445, 65536, 1, 1572981, 65536, 1, 1572982, 65536, 1, 1507446, 65536, 1, 1441910, 65536, 1, 1376374, 65536, 1, 1310838, 65536, 1, 1245302, 65536, 1, 1179766, 65536, 1, 1114230, 65536, 1, 1048694, 65536, 1, 983158, 65536, 1, 917622, 65536, 1, 852086, 65536, 1, 786550, 65536, 1, 721014, 65536, 1, 655478, 65536, 1, 589942, 65536, 1, 524406, 65536, 1, 458870, 65536, 1, 393334, 65536, 1, 327798, 65536, 1, 327799, 65536, 1, 393335, 65536, 1, 458871, 65536, 1, 524407, 65536, 1, 589943, 65536, 1, 655479, 65536, 1, 721015, 65536, 1, 786551, 65536, 1, 852087, 65536, 1, 917623, 65536, 1, 983159, 65536, 1, 1048695, 65536, 1, 1114231, 65536, 1, 1179767, 65536, 1, 1245303, 65536, 1, 1310839, 65536, 1, 1376375, 65536, 1, 1441911, 65536, 1, 1507447, 65536, 1, 1572983, 65536, 1, 1572984, 65536, 1, 1507448, 65536, 1, 1441912, 65536, 1, 1376376, 65536, 1, 1310840, 65536, 1, 1245304, 65536, 1, 1179768, 65536, 1, 1114232, 65536, 1, 1048696, 65536, 1, 983160, 65536, 1, 917624, 65536, 1, 852088, 65536, 1, 786552, 65536, 1, 721016, 65536, 1, 655480, 65536, 1, 589944, 65536, 1, 524408, 65536, 1, 458872, 65536, 1, 393336, 65536, 1, 327800, 65536, 1, 327801, 65536, 1, 393337, 65536, 1, 458873, 65536, 1, 524409, 65536, 1, 589945, 65536, 1, 655481, 65536, 1, 721017, 65536, 1, 786553, 65536, 1, 852089, 65536, 1, 917625, 65536, 1, 983161, 65536, 1, 1048697, 65536, 1, 1114233, 65536, 1, 1179769, 65536, 1, 1245305, 65536, 1, 1310841, 65536, 1, 1376377, 65536, 1, 1441913, 65536, 1, 1507449, 65536, 1, 1572985, 65536, 1, 1572986, 65536, 1, 1507450, 65536, 1, 1441914, 65536, 1, 1376378, 65536, 1, 1310842, 65536, 1, 1245306, 65536, 1, 1179770, 65536, 1, 1114234, 65536, 1, 1048698, 65536, 1, 983162, 65536, 1, 983163, 65536, 1, 917627, 65536, 1, 852091, 65536, 1, 786555, 65536, 1, 721019, 65536, 1, 655483, 65536, 1, 589947, 65536, 1, 524411, 65536, 1, 458875, 65536, 1, 393339, 65536, 1, 327803, 65536, 1, 262267, 65536, 1, 262268, 65536, 1, 327804, 65536, 1, 393340, 65536, 1, 458876, 65536, 1, 524412, 65536, 1, 589948, 65536, 1, 655484, 65536, 1, 721020, 65536, 1, 786556, 65536, 1, 852092, 65536, 1, 917628, 65536, 1, 983164, 65536, 1, 1048700, 65536, 1, 1048699, 65536, 1, 1114235, 65536, 1, 1179771, 65536, 1, 1245307, 65536, 1, 1310843, 65536, 1, 1376379, 65536, 1, 1441915, 65536, 1, 1507451, 65536, 1, 1572987, 65536, 1, 1572988, 65536, 1, 1507452, 65536, 1, 1441916, 65536, 1, 1376380, 65536, 1, 1310844, 65536, 1, 1245308, 65536, 1, 1179772, 65536, 1, 1114236, 65536, 1, 1114237, 65536, 1, 1048701, 65536, 1, 983165, 65536, 1, 917629, 65536, 1, 852093, 65536, 1, 786557, 65536, 1, 721021, 65536, 1, 655485, 65536, 1, 589949, 65536, 1, 524413, 65536, 1, 458877, 65536, 1, 393341, 65536, 1, 327805, 65536, 1, 262269, 65536, 1, 262270, 65536, 1, 327806, 65536, 1, 393342, 65536, 1, 458878, 65536, 1, 524414, 65536, 1, 589950, 65536, 1, 655486, 65536, 1, 721022, 65536, 1, 786558, 65536, 1, 852094, 65536, 1, 917630, 65536, 1, 983166, 65536, 1, 1048702, 65536, 1, 1114238, 65536, 1, 1179774, 65536, 1, 1179773, 65536, 1, 1245309, 65536, 1, 1310845, 65536, 1, 1376381, 65536, 1, 1441917, 65536, 1, 1507453, 65536, 1, 1572989, 65536, 1, 1572990, 65536, 1, 1507454, 65536, 1, 1441918, 65536, 1, 1376382, 65536, 1, 1310846, 65536, 1, 1245310, 65536, 1, 1900635, 65536, 1, 1835099, 65536, 1, 1769563, 65536, 1, 1769562, 65536, 1, 1769561, 65536, 1, 1769560, 65536, 1, 1769559, 65536, 1, 1769558, 65536, 1, 1769557, 65536, 1, 1769556, 65536, 1, 1769555, 65536, 1, 1769554, 65536, 1, 1769553, 65536, 1, 1769552, 65536, 1, 1769551, 65536, 1, 1769550, 65536, 1, 1769549, 65536, 1, 1769548, 65536, 1, 1769547, 65536, 1, 1769546, 65536, 1, 1769545, 65536, 1, 1769544, 65536, 1, 1769543, 65536, 1, 1769542, 65536, 1, 1769541, 65536, 1, 1769540, 65536, 1, 1769539, 65536, 1, 1769538, 65536, 1, 1769537, 65536, 1, 1769536, 65536, 1, 1835072, 65536, 1, 1900608, 65536, 1, 1966144, 65536, 1, 1966145, 65536, 1, 1900609, 65536, 1, 1835073, 65536, 1, 1835074, 65536, 1, 1900610, 65536, 1, 1966146, 65536, 1, 1966147, 65536, 1, 1900611, 65536, 1, 1835075, 65536, 1, 1835076, 65536, 1, 1900612, 65536, 1, 1966148, 65536, 1, 1966149, 65536, 1, 1900613, 65536, 1, 1835077, 65536, 1, 1835078, 65536, 1, 1900614, 65536, 1, 1966150, 65536, 1, 1966151, 65536, 1, 1900615, 65536, 1, 1835079, 65536, 1, 1835080, 65536, 1, 1900616, 65536, 1, 1966152, 65536, 1, 1966153, 65536, 1, 1900617, 65536, 1, 1835081, 65536, 1, 1835082, 65536, 1, 1900618, 65536, 1, 1966154, 65536, 1, 1966155, 65536, 1, 1900619, 65536, 1, 1835083, 65536, 1, 1835084, 65536, 1, 1900620, 65536, 1, 1966156, 65536, 1, 1966157, 65536, 1, 1900621, 65536, 1, 1835085, 65536, 1, 1835086, 65536, 1, 1900622, 65536, 1, 1966158, 65536, 1, 1966159, 65536, 1, 1900623, 65536, 1, 1835087, 65536, 1, 1835088, 65536, 1, 1900624, 65536, 1, 1966160, 65536, 1, 1966161, 65536, 1, 1900625, 65536, 1, 1835089, 65536, 1, 1835090, 65536, 1, 1900626, 65536, 1, 1966162, 65536, 1, 1966163, 65536, 1, 1900627, 65536, 1, 1835091, 65536, 1, 1835092, 65536, 1, 1900628, 65536, 1, 1966164, 65536, 1, 1966165, 65536, 1, 1900629, 65536, 1, 1835093, 65536, 1, 1835094, 65536, 1, 1900630, 65536, 1, 1966166, 65536, 1, 1966167, 65536, 1, 1900631, 65536, 1, 1835095, 65536, 1, 1835096, 65536, 1, 1900632, 65536, 1, 1966168, 65536, 1, 1966169, 65536, 1, 1900633, 65536, 1, 1835097, 65536, 1, 1835098, 65536, 1, 1900634, 65536, 1, 1966170, 65536, 1, 1966171, 65536, 1, 1966172, 65536, 1, 1900636, 65536, 1, 1835100, 65536, 1, 1769564, 65536, 1, 1769565, 65536, 1, 1835101, 65536, 1, 1900637, 65536, 1, 1966173, 65536, 1, 1966174, 65536, 1, 1900638, 65536, 1, 1835102, 65536, 1, 1769566, 65536, 1, 1769567, 65536, 1, 1835103, 65536, 1, 1900639, 65536, 1, 1966175, 65536, 1, 1966176, 65536, 1, 1900640, 65536, 1, 1835104, 65536, 1, 1769568, 65536, 1, 1769569, 65536, 1, 1835105, 65536, 1, 1900641, 65536, 1, 1966177, 65536, 1, 1966178, 65536, 1, 1900642, 65536, 1, 1835106, 65536, 1, 1769570, 65536, 1, 1769571, 65536, 1, 1835107, 65536, 1, 1900643, 65536, 1, 1966179, 65536, 1, 1966180, 65536, 1, 1900644, 65536, 1, 1835108, 65536, 1, 1769572, 65536, 1, 1769573, 65536, 1, 1835109, 65536, 1, 1900645, 65536, 1, 1966181, 65536, 1, 1966182, 65536, 1, 1900646, 65536, 1, 1835110, 65536, 1, 1769574, 65536, 1, 1769575, 65536, 1, 1835111, 65536, 1, 1900647, 65536, 1, 1966183, 65536, 1, 1966184, 65536, 1, 1900648, 65536, 1, 1835112, 65536, 1, 1769576, 65536, 1, 1769577, 65536, 1, 1835113, 65536, 1, 1900649, 65536, 1, 1966185, 65536, 1, 1966186, 65536, 1, 1900650, 65536, 1, 1835114, 65536, 1, 1769578, 65536, 1, 1769579, 65536, 1, 1835115, 65536, 1, 1900651, 65536, 1, 1966187, 65536, 1, 1966188, 65536, 1, 1900652, 65536, 1, 1835116, 65536, 1, 1769580, 65536, 1, 1769581, 65536, 1, 1835117, 65536, 1, 1900653, 65536, 1, 1966189, 65536, 1, 1966190, 65536, 1, 1900654, 65536, 1, 1835118, 65536, 1, 1769582, 65536, 1, 1769583, 65536, 1, 1835119, 65536, 1, 1900655, 65536, 1, 1966191, 65536, 1, 1966192, 65536, 1, 1900656, 65536, 1, 1835120, 65536, 1, 1769584, 65536, 1, 1769585, 65536, 1, 1835121, 65536, 1, 1900657, 65536, 1, 1966193, 65536, 1, 1966194, 65536, 1, 1900658, 65536, 1, 1835122, 65536, 1, 1769586, 65536, 1, 1769587, 65536, 1, 1835123, 65536, 1, 1900659, 65536, 1, 1966195, 65536, 1, 1966196, 65536, 1, 1900660, 65536, 1, 1835124, 65536, 1, 1769588, 65536, 1, 1769589, 65536, 1, 1835125, 65536, 1, 1900661, 65536, 1, 1966197, 65536, 1, 1966198, 65536, 1, 1900662, 65536, 1, 1835126, 65536, 1, 1769590, 65536, 1, 1769591, 65536, 1, 1835127, 65536, 1, 1900663, 65536, 1, 1966199, 65536, 1, 1966200, 65536, 1, 1900664, 65536, 1, 1835128, 65536, 1, 1769592, 65536, 1, 1769593, 65536, 1, 1835129, 65536, 1, 1900665, 65536, 1, 1966201, 65536, 1, 1966202, 65536, 1, 1900666, 65536, 1, 1835130, 65536, 1, 1769594, 65536, 1, 1769595, 65536, 1, 1835131, 65536, 1, 1900667, 65536, 1, 1966203, 65536, 1, 1966204, 65536, 1, 1900668, 65536, 1, 1835132, 65536, 1, 1769596, 65536, 1, 1769597, 65536, 1, 1835133, 65536, 1, 1900669, 65536, 1, 1966205, 65536, 1, 1966206, 65536, 1, 1900670, 65536, 1, 1835134, 65536, 1, 1769598, 65536, 1, 1769599, 65536, 1, 1835135, 65536, 1, 1900671, 65536, 1, 1966207, 65536, 1, 1966208, 65536, 1, 1900672, 65536, 1, 1835136, 65536, 1, 1769600, 65536, 1, 196619, 131072, 1, 262155, 131072, 1, 327691, 131072, 1, 393227, 131072, 1, 458763, 131072, 1, 524299, 131072, 1, 589835, 131072, 1, 655371, 131072, 1, 720907, 131072, 1, 786443, 131072, 1, 851979, 131072, 1, 917515, 131072, 1, 983051, 131072, 1, 1048587, 131072, 1, 1114123, 131072, 1, 1179659, 131072, 1, 1245195, 131072, 1, 1310731, 131072, 1, 1376267, 131072, 1, 1441803, 131072, 1, 1507339, 131072, 1, 1572875, 131072, 1, 1638411, 131072, 1)

[node name="Player" parent="." instance=ExtResource("3_nc3y0")]
position = Vector2(166, 993)

[node name="RecordPosTimer" type="Timer" parent="."]
wait_time = 0.05
autostart = true

[node name="StartFollowTimer" type="Timer" parent="."]
wait_time = 5.0

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(2, 2)
limit_left = 0
limit_top = 0
limit_bottom = 1080
limit_smoothed = true
drag_horizontal_enabled = true
drag_vertical_enabled = true
drag_top_margin = 0.5

[node name="Enemies" type="Node2D" parent="."]

[node name="LevelTimer" type="Timer" parent="."]
wait_time = 0.1

[node name="Key" parent="." instance=ExtResource("4_ah7qu")]
position = Vector2(577, 985)

[node name="Exit" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Exit"]
position = Vector2(1139, 971)
shape = SubResource("RectangleShape2D_72m5e")

[node name="reaper" parent="." instance=ExtResource("5_qx8tn")]
position = Vector2(695, 982)

[connection signal="got_key" from="Player" to="." method="_on_player_got_key"]
[connection signal="player_died" from="Player" to="." method="_on_player_player_died"]
[connection signal="timeout" from="RecordPosTimer" to="." method="_on_record_pos_timer_timeout"]
[connection signal="timeout" from="StartFollowTimer" to="." method="_on_start_follow_timer_timeout"]
[connection signal="timeout" from="LevelTimer" to="." method="_on_level_timer_timeout"]
[connection signal="body_entered" from="Exit" to="." method="_on_exit_body_entered"]
